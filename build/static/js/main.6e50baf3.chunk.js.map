{"version":3,"sources":["components/SearchFilter.js","components/AddNew.js","components/Numbers.js","services/phonebook.js","components/Notification.js","App.js","index.js"],"names":["SearchFilter","filterText","filterChangeHandler","value","onChange","AddNew","submitHandler","newName","nameChangeHandler","newPhone","phoneChangeHandler","onSubmit","type","Number","personEntry","deleteNumber","name","number","onClick","Numbers","personsToShow","map","person","id","baseUrl","axios","get","newObject","post","delete","newPerson","put","Notification","message","notifStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useState","persons","setPersons","setNewName","setNewPhone","setNewFilter","notifMessage","setNotifMessage","notifType","setNotifType","loadPersons","phonebook","then","response","data","useEffect","length","filter","toLowerCase","includes","event","target","preventDefault","alreadyPerson","find","window","confirm","updatedPerson","phone","setTimeout","concat","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e50baf3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst SearchFilter = ({ filterText, filterChangeHandler }) => {\r\n    return (\r\n        <>\r\n            <div>filter shown with:\r\n            <input value={filterText} onChange={filterChangeHandler}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchFilter","import React from 'react'\r\n\r\nconst AddNew = ({ submitHandler, newName, nameChangeHandler, newPhone, phoneChangeHandler }) => {\r\n    return (\r\n        <>\r\n            <h2>Add a new</h2>\r\n            <form onSubmit={submitHandler}>\r\n            <div>name:\r\n            <input value={newName} onChange={nameChangeHandler}/>\r\n            </div>\r\n            <div>number:\r\n            <input value={newPhone} onChange={phoneChangeHandler}/>\r\n            </div>\r\n            <div>\r\n            <button type=\"submit\">add</button>\r\n            </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddNew","import React from 'react'\r\n\r\nconst Number = ({ personEntry, deleteNumber }) => {\r\n    return(\r\n        <li>{personEntry.name}, {personEntry.number}\r\n        <button onClick={deleteNumber}>delete</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nconst Numbers = ({ personsToShow, deleteNumber }) => {\r\n\r\n    return (\r\n        <>\r\n            <h2>Numbers</h2>\r\n            <ul>\r\n                {personsToShow.map(person =>\r\n                <Number\r\n                    key={person.name}\r\n                    personEntry={person}\r\n                    deleteNumber={() => deleteNumber(person.id)}\r\n                />\r\n                )}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Numbers","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst updatePerson = (id, newPerson) => {\r\n    return axios.put(`${baseUrl}/${id}`, newPerson)\r\n}\r\n\r\nexport default { getAll, create, deletePerson, updatePerson }","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n    const notifStyle = {\r\n        color: type,\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    }\r\n\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div style={notifStyle}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useEffect, useState } from 'react'\r\nimport SearchFilter from './components/SearchFilter'\r\nimport AddNew from './components/AddNew'\r\nimport Numbers from './components/Numbers'\r\nimport phonebook from './services/phonebook'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newPhone, setNewPhone ] = useState('')\r\n  const [ filterText, setNewFilter ] = useState('')\r\n  const [ notifMessage, setNotifMessage ] = useState(null)\r\n  const [ notifType, setNotifType ] = useState('')\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault()\r\n    //check if name is in phonebook\r\n    let personsNames = persons.map(person => person.name)\r\n    if (personsNames.includes(newName)){\r\n      let alreadyPerson = persons.find(person => person.name === newName)\r\n      if (window.confirm(`${newName} is already in the phonebook, replace the old number with a new one?`)) {\r\n        const updatedPerson = {...alreadyPerson, phone: newPhone}\r\n        phonebook\r\n          .updatePerson(alreadyPerson.id, updatedPerson)\r\n          .then(() => {\r\n            loadPersons()\r\n            // set notification message\r\n            setNotifMessage(`${newName} has been updated in phonebook`)\r\n            setNotifType('green')\r\n            setNewName('')\r\n            setNewPhone('')\r\n            setTimeout(() => {\r\n              setNotifMessage(null)\r\n            }, 3000);\r\n          })\r\n      }\r\n    } else {\r\n        let nameSubmit = {\r\n          name: newName,\r\n          phone: newPhone\r\n        }\r\n        phonebook\r\n          .create(nameSubmit)\r\n          .then(response => {\r\n            setPersons(persons.concat(response.data))\r\n            // notification message\r\n            setNotifMessage(`${newName} has been created in phonebook`)\r\n            setNotifType('green')\r\n            setTimeout(() => {\r\n              setNotifMessage(null)\r\n            }, 3000);\r\n            setNewName('')\r\n            setNewPhone('')\r\n          })\r\n    }\r\n  }\r\n\r\n  const loadPersons = () => {\r\n    phonebook\r\n      .getAll()\r\n      .then(response => {\r\n        setPersons(response.data)\r\n      })\r\n  }\r\n\r\n  useEffect(loadPersons, [])\r\n\r\n  const nameChangeHandler = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const phoneChangeHandler = (event) => {\r\n    setNewPhone(event.target.value)\r\n  }\r\n\r\n  // filter people being shown through search text\r\n  const personsToShow = filterText.length > 0\r\n    ? persons.filter(person => person.name.toLowerCase().includes(filterText))\r\n    : persons\r\n\r\n  const filterChangeHandler = (event) => {\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  const deleteNumber = (id) => {\r\n    if (window.confirm('Do you really want to delete this entry?')) {\r\n      phonebook\r\n      .deletePerson(id)\r\n      .then(() => {\r\n        loadPersons()\r\n        setNotifMessage(`Person deleted from phonebook`)\r\n        setNotifType('green')\r\n        setTimeout(() => {\r\n          setNotifMessage(null)\r\n        }, 3000);\r\n      })\r\n      .catch(error => {\r\n        setNotifMessage('Person has already been deleted from phonebook')\r\n        setNotifType('red')\r\n        setTimeout(() => {\r\n          setNotifMessage(null)\r\n        }, 3000);\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notifMessage} type={notifType}/>\r\n      <SearchFilter filterText={filterText} filterChangeHandler={filterChangeHandler}/>\r\n      <AddNew\r\n        submitHandler={submitHandler}\r\n        newName={newName}\r\n        nameChangeHandler={nameChangeHandler}\r\n        newPhone={newPhone}\r\n        phoneChangeHandler={phoneChangeHandler}\r\n      />\r\n      <Numbers\r\n        personsToShow={personsToShow}\r\n        deleteNumber={deleteNumber}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)"],"sourceRoot":""}